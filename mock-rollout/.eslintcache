[{"C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\index.tsx":"1","C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\reportWebVitals.ts":"2","C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\App.tsx":"3","C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\store\\ApiContext.ts":"4","C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\constants\\api-endpoint.ts":"5","C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\components\\ProductsList\\ProductsList.tsx":"6","C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\components\\ProductItem\\ProductItem.tsx":"7","C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\store\\HardwareContext.tsx":"8","C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\pages\\dashboard\\Dashboard.tsx":"9","C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\services\\HardwareService.ts":"10","C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\components\\HardwareList\\HardwareList.tsx":"11","C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\components\\HardwareItem\\HardwareItem.tsx":"12","C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\components\\EditTextInput\\EditTextInput.tsx":"13","C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\components\\EditTextArea\\EditTextArea.tsx":"14","C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\components\\EditTextDropdown\\EditTextDropdown.tsx":"15","C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\constants\\hardware-types.ts":"16","C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\store\\ProductContext.tsx":"17","C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\services\\ProductService.ts":"18"},{"size":520,"mtime":1608111721473,"results":"19","hashOfConfig":"20"},{"size":440,"mtime":1608111721474,"results":"21","hashOfConfig":"20"},{"size":554,"mtime":1608549886957,"results":"22","hashOfConfig":"20"},{"size":345,"mtime":1608549886964,"results":"23","hashOfConfig":"20"},{"size":120,"mtime":1608111721472,"results":"24","hashOfConfig":"20"},{"size":733,"mtime":1608549886961,"results":"25","hashOfConfig":"20"},{"size":461,"mtime":1608549886960,"results":"26","hashOfConfig":"20"},{"size":3502,"mtime":1608549790127,"results":"27","hashOfConfig":"20"},{"size":573,"mtime":1608549790125,"results":"28","hashOfConfig":"20"},{"size":593,"mtime":1608549790126,"results":"29","hashOfConfig":"20"},{"size":592,"mtime":1608549790118,"results":"30","hashOfConfig":"20"},{"size":6994,"mtime":1608549790115,"results":"31","hashOfConfig":"20"},{"size":519,"mtime":1608549790113,"results":"32","hashOfConfig":"20"},{"size":590,"mtime":1608549790111,"results":"33","hashOfConfig":"20"},{"size":762,"mtime":1608549790112,"results":"34","hashOfConfig":"20"},{"size":79,"mtime":1608549790121,"results":"35","hashOfConfig":"20"},{"size":2314,"mtime":1608549886965,"results":"36","hashOfConfig":"20"},{"size":268,"mtime":1608549886963,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"2s0ajk",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\index.tsx",[],["77","78"],"C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\reportWebVitals.ts",[],"C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\App.tsx",[],"C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\store\\ApiContext.ts",[],"C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\constants\\api-endpoint.ts",[],"C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\components\\ProductsList\\ProductsList.tsx",[],"C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\components\\ProductItem\\ProductItem.tsx",[],"C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\store\\HardwareContext.tsx",["79"],"import React, { createContext, FC, useEffect, useState, useReducer } from 'react';\r\nimport { IHardware } from '../model/HardwareModel';\r\nimport { HardwareService } from '../services/HardwareService';\r\n\r\ninterface IState {\r\n    hardwares?: IHardware[] | null | undefined;\r\n    error?: string;\r\n    updateHardware?: (id: number, hardware: IHardware) => void\r\n}\r\n\r\ninterface IHardwareProps  {\r\n    children: React.ReactNode;\r\n}\r\n\r\ntype IAction = \r\n    | { type: 'GET_SUCCESS', hardwares: IHardware[] | null, error: string }\r\n    | { type: 'GET_FAILED', hardwares: IHardware[] | null, error: string }\r\n    | { type: 'EDIT', hardwares: IHardware[] }\r\n\r\n\r\nconst initialHardwareState: IState = {\r\n    hardwares: [],\r\n    error: '',\r\n    updateHardware: (id: number, hardware: IHardware) => {}\r\n}\r\n\r\nexport const HardwareContext = createContext<{\r\n        state: IState, \r\n        dispatch: React.Dispatch<any>;}>\r\n    ({\r\n        state: initialHardwareState, \r\n        dispatch: () => null\r\n    });\r\n\r\nconst reducer = (state: IState, action: IAction): IState => {\r\n    switch (action.type) {\r\n        case 'GET_SUCCESS': \r\n            return { hardwares: action.hardwares, error: '' };\r\n        case 'GET_FAILED': \r\n            return { hardwares: [], error: action.error };\r\n        case 'EDIT':\r\n            return { hardwares: action.hardwares };\r\n         default: \r\n            return state\r\n    }\r\n}\r\n\r\nconst deleteHardware = (hardwares: IHardware[], id: number): IHardware[] => {\r\n    if (hardwares[id]) {\r\n        var index = hardwares.indexOf(hardwares[id])\r\n        hardwares.splice(index, 1);\r\n    }\r\n    return hardwares;\r\n}\r\n\r\nexport const HardwareContextProvider: FC<IHardwareProps> = props => {\r\n    const [ getHardwareState, setHardwareState ] = useState<IState>({ hardwares: [] });\r\n    const [ errorMessage, setErrorMessage ] = useState<IState>({ error: '' });\r\n    const [ state, dispatch ] = useReducer(reducer, initialHardwareState);\r\n    \r\n    const store = { state, dispatch };\r\n\r\n    async function handleGetData() {\r\n        await HardwareService.getHardware()\r\n            .then(response => {\r\n                setHardwareState({ hardwares: response });\r\n                dispatch({\r\n                    type: 'GET_SUCCESS', \r\n                    hardwares: getHardwareState.hardwares!,\r\n                    error: ''\r\n                });\r\n            })\r\n            .catch(error => {\r\n                setErrorMessage({ error: error.message })\r\n                dispatch({\r\n                    type: 'GET_FAILED',\r\n                    hardwares: [],\r\n                    error: errorMessage.error!\r\n                });\r\n            })\r\n    }\r\n\r\n    const handleEditHardware = (id: number, hardware: IHardware) => {\r\n        HardwareService.editHardware(id, hardware)\r\n            .then(response => {\r\n                setHardwareState({\r\n                    hardwares: [...deleteHardware(getHardwareState.hardwares!, id), hardware]\r\n                });\r\n                dispatch({\r\n                    type: 'EDIT', \r\n                    hardwares: getHardwareState.hardwares!\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n        })\r\n    }\r\n\r\n    state.updateHardware = handleEditHardware;\r\n\r\n    useEffect(() => {\r\n        handleGetData();\r\n    }, [getHardwareState, errorMessage]);\r\n\r\n    return (\r\n        <HardwareContext.Provider value={store}>\r\n            {props.children}\r\n        </HardwareContext.Provider>\r\n    )\r\n}","C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\pages\\dashboard\\Dashboard.tsx",[],"C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\services\\HardwareService.ts",[],"C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\components\\HardwareList\\HardwareList.tsx",["80","81"],"import React, { FC, Fragment, useCallback, useContext } from 'react';\r\nimport { HardwareItem } from '../HardwareItem/HardwareItem';\r\nimport './HardwareList.scss'\r\nimport { IHardwareListProps } from './Types/HardwareListProps';\r\n\r\nexport const HardwareList: FC<IHardwareListProps> =  ({hardware}) => {\r\n    \r\n    return (\r\n        <Fragment>\r\n            <div className='hardware__container'>\r\n                {hardware.map((item, index) => (\r\n                    <HardwareItem hardware={item} key={index} index={index}/>\r\n                ))}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}","C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\components\\HardwareItem\\HardwareItem.tsx",[],"C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\components\\EditTextInput\\EditTextInput.tsx",[],"C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\components\\EditTextArea\\EditTextArea.tsx",[],"C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\components\\EditTextDropdown\\EditTextDropdown.tsx",[],"C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\constants\\hardware-types.ts",[],"C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\store\\ProductContext.tsx",[],"C:\\Users\\mihai.pop\\Desktop\\ProjectReact\\MockRollout\\mock-rollout\\src\\services\\ProductService.ts",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":103,"column":8,"nodeType":"88","endLine":103,"endColumn":40,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":1,"column":31,"nodeType":"92","messageId":"93","endLine":1,"endColumn":42},{"ruleId":"90","severity":1,"message":"94","line":1,"column":44,"nodeType":"92","messageId":"93","endLine":1,"endColumn":54},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleGetData'. Either include it or remove the dependency array.","ArrayExpression",["97"],"@typescript-eslint/no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},"Update the dependencies array to be: [getHardwareState, errorMessage, handleGetData]",{"range":"100","text":"101"},[3325,3357],"[getHardwareState, errorMessage, handleGetData]"]